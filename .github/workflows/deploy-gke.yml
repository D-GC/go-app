name: Deploy images to GKE

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  IMAGE: "my-go-app/app"
  GKE_CLUSTER: production-cluster
  GKE_ZONE: us-central1-c
  DEPLOYMENT_NAME: my-go-app
  TAG: ${{ github.event.inputs.tag }}
on:
  workflow_dispatch:
    inputs:
      tag:
        description: Tag to deploy
        required: true
jobs:
  deploy:
    name: deploy images
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure GKE
      uses: sendinblue/gke-login-action@main
      with:
        gcp-project-id: ${{ env.PROJECT_ID }}
        gcp-service-account-key: ${{ secrets.GKE_DEPLOY_SA_KEY }}
        gke-cluster: ${{ env.GKE_CLUSTER }}
        gke-zone: ${{ env.GKE_ZONE }}

#    - name: Set up Cloud SDK
#      uses: google-github-actions/setup-gcloud@master
#      with:
#        project_id: ${{ secrets.GKE_PROJECT }}
#        service_account_key: ${{ secrets.GKE_DEPLOY_SA_KEY }}
#
#    # Get the GKE credentials so we can deploy to the cluster
#    - run: |-
#        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
    - name: GCR image
      run: |
        echo gcr.io/$PROJECT_ID/$IMAGE:$TAG
    - name: Configure and deploy
      uses: 'sendinblue/k8s-deploy-action@main'
      with:
        resource-directory: ./kubernetes/overlays/production/
        #images: gcr.io/$PROJECT_ID/$IMAGE:$TAG
        images: 'gcr.io/platform-production-299016/my-go-app:0.0.27'
        secrets-name: 'go-app'
        secrets: |
          test-secret=test

#    # Deploy the Docker image to the GKE cluster
#    - name: Deploy
#      env:
#        TAG: ${{ github.event.inputs.tag }}
#        DEPLOYMENT_DIR: ./kubernetes/overlays/production/
#      run: |
#        $(cd $DEPLOYMENT_DIR &&
#        kustomize edit set image gcr.io/$PROJECT_ID/$IMAGE:$TAG &&
#        kustomize edit add secret go-app --from-literal=test-secret=test)
#        kustomize build $DEPLOYMENT_DIR | kubectl apply -f -
#        kubectl rollout status deployment/$DEPLOYMENT_NAME
#        kubectl get services -o wide

