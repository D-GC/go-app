name: Test

env:
  IMAGES: |
    abc
    def
    hig
    feature_dev_branch
 
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
      - feature/*
jobs:    
  getenv:
    runs-on: ubuntu-latest
    steps:
#     - name: Get branch name (merge)
#       if: github.event_name != 'pull_request'
#       shell: bash
#       run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

#     - name: Get branch name (pull request)
#       if: github.event_name == 'pull_request'
#       shell: bash
#       run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

    - name: Set Prod Env
      if: startsWith(github.ref, 'refs/tags/v')
      run: echo "ENV=production" >> $GITHUB_ENV
 
    - name: Set Staging Env
      if: github.ref == 'refs/heads/main'
      run: echo "ENV=staging" >> $GITHUB_ENV   
      
    - name: Set feature Env
      if: startsWith(github.ref, 'refs/heads/feature') || startsWith(github.ref, 'refs/heads/hotfix') 
      run: echo "ENV=feature" >> $GITHUB_ENV 
    - name: print ENV
      run: echo " ${{ env.ENV }} ${{ env.BRANCH_NAME }} "
    
  deploy:
    environment: Test
    name: deploy images
    runs-on: ubuntu-latest
    steps:
    - name: kustomize version
      run: kustomize version
    - name: secret env test
      run: echo ${{ secrets.STAGING_D_GC_DOCKER_HUB_ACCESS_TOKEN }}
    - name: Test
      run: |
        if [[ -n "$IMAGES" ]]; then
          echo "Setting image: $IMAGES"
        fi
