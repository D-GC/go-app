name: Test Script
on:
  workflow_dispatch:
#   push:
#     branches:
#       - main
#       - dev
#       - feature/*
jobs:    
  getenv:
    outputs:
       output1: ${{ steps.step1.outputs.env }}
    runs-on: ubuntu-latest
    steps:
#     - name: Get branch name (merge)
#       if: github.event_name != 'pull_request'
#       shell: bash
#       run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

#     - name: Get branch name (pull request)
#       if: github.event_name == 'pull_request'
#       shell: bash
#       run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV
        
    - name: Set Prod Env
      if: startsWith(github.ref, 'refs/tags/v')
      run: echo "APP_ENV=production" >> $GITHUB_ENV
 
    - name: Set Staging Env
      if: github.ref == 'refs/heads/main'
      run: echo "APP_ENV=staging" >> $GITHUB_ENV   

    - name: Set feature Env
      if: startsWith(github.ref, 'refs/heads/feature') || startsWith(github.ref, 'refs/heads/hotfix') 
      run: echo "APP_ENV=feature" >> $GITHUB_ENV 

    - id: getenv
      run: echo "::set-output name=env::${{ env.APP_ENV }}"
      
#     - name: print $DB_PASS
#       if: steps.step2.outputs.db_pass == 'staging-db-pass'
#       env:
#         DB_PASS: ${{ secrets[format('{0}_DB_PASS', env.APP_ENV)] }}
#       run: echo "staging-db-pass"
   
  deploy:
    needs: getenv
    env:
      APP_ENV: ${{ needs.getenv.outputs.output1 }}
#    environment: ${{ env.APP_ENV }}
    name: deploy images
    runs-on: ubuntu-latest
    steps:
    - name: Print App Env from another job
      run: | 
        echo " ${{ env.APP_ENV }}  - ${{ needs.getenv.outputs.output1 }}" 
        TAG_APP=${{ needs.getenv.outputs.output1 }}
        echo "TAG_APP=$TAG_APP" >> $GITHUB_ENV
#     - name: secret env test
#       run: echo ${{ secrets.STAGING_D_GC_DOCKER_HUB_ACCESS_TOKEN }}
#     - name: Test
#       run: |
#         if [[ -n "$IMAGES" ]]; then
#           echo "Setting image: $IMAGES"
#         fi
